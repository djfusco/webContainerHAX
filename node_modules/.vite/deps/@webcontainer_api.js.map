{
  "version": 3,
  "sources": ["../../@webcontainer/api/dist/index.js"],
  "sourcesContent": ["// ../../node_modules/@blitz/comlink/dist/esm/comlink.mjs\nvar proxyMarker = Symbol(\"Comlink.proxy\");\nvar createEndpoint = Symbol(\"Comlink.endpoint\");\nvar releaseProxy = Symbol(\"Comlink.releaseProxy\");\nvar throwMarker = Symbol(\"Comlink.thrown\");\nvar isObject = (val) => typeof val === \"object\" && val !== null || typeof val === \"function\";\nvar proxyTransferHandler = {\n  canHandle: (val) => isObject(val) && Boolean(val[proxyMarker]),\n  serialize(obj) {\n    const { port1, port2 } = new MessageChannel();\n    const options = obj[proxyMarker];\n    expose(obj, port1, typeof options === \"object\" ? options : void 0);\n    return [port2, [port2]];\n  },\n  deserialize(port) {\n    port.start();\n    return wrap(port);\n  }\n};\nvar throwTransferHandler = {\n  canHandle: (value) => isObject(value) && throwMarker in value,\n  serialize({ value }) {\n    let serialized;\n    if (value instanceof Error) {\n      serialized = {\n        isError: true,\n        value: {\n          message: value.message,\n          name: value.name,\n          stack: value.stack\n        }\n      };\n    } else {\n      serialized = { isError: false, value };\n    }\n    return [serialized, []];\n  },\n  deserialize(serialized) {\n    if (serialized.isError) {\n      throw Object.assign(new Error(serialized.value.message), serialized.value);\n    }\n    throw serialized.value;\n  }\n};\nvar transferHandlers = /* @__PURE__ */ new Map([\n  [\"proxy\", proxyTransferHandler],\n  [\"throw\", throwTransferHandler]\n]);\nfunction expose(obj, ep = self, options) {\n  ep.addEventListener(\"message\", function callback(ev) {\n    if (!ev || !ev.data) {\n      return;\n    }\n    const { id, type, path } = Object.assign({ path: [] }, ev.data);\n    const argumentList = (ev.data.argumentList || []).map(fromWireValue);\n    let returnValue;\n    try {\n      const unrestricted = (options === null || options === void 0 ? void 0 : options.spec) == null;\n      let parent = obj;\n      let rawValue = obj;\n      let spec = options === null || options === void 0 ? void 0 : options.spec;\n      let parentSpec = spec;\n      for (const component of path) {\n        parent = rawValue;\n        parentSpec = spec;\n        if (unrestricted) {\n          rawValue = rawValue[component];\n          continue;\n        }\n        if (typeof spec === \"object\" && spec.hasOwnProperty(component)) {\n          rawValue = rawValue[component];\n          spec = spec[component];\n        } else {\n          rawValue = void 0;\n          spec = void 0;\n          break;\n        }\n      }\n      switch (type) {\n        case 0:\n          {\n            returnValue = rawValue;\n          }\n          break;\n        case 1:\n          {\n            returnValue = false;\n            const set = (options === null || options === void 0 ? void 0 : options.set) !== false;\n            const allowed = unrestricted || parentSpec === \"primitive\" || spec === \"primitive\";\n            if (!allowed) {\n              parent = void 0;\n            }\n            if (set || !allowed) {\n              parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\n              returnValue = true;\n            }\n          }\n          break;\n        case 2:\n          {\n            if (!(unrestricted || spec === \"function\")) {\n              rawValue = void 0;\n            }\n            returnValue = rawValue.apply(parent, argumentList);\n          }\n          break;\n        case 3:\n          {\n            if (!unrestricted) {\n              rawValue = void 0;\n            }\n            const value = new rawValue(...argumentList);\n            returnValue = proxy(value);\n          }\n          break;\n        case 4:\n          {\n            const { port1, port2 } = new MessageChannel();\n            expose(obj, port2, options);\n            returnValue = transfer(port1, [port1]);\n          }\n          break;\n        case 5:\n          {\n            returnValue = void 0;\n          }\n          break;\n      }\n    } catch (value) {\n      returnValue = { value, [throwMarker]: 0 };\n    }\n    Promise.resolve(returnValue).catch((value) => {\n      return { value, [throwMarker]: 0 };\n    }).then((returnValue2) => {\n      const [wireValue, transferables] = toWireValue(returnValue2);\n      ep.postMessage(Object.assign(Object.assign({}, wireValue), { id }), transferables);\n      if (type === 5) {\n        ep.removeEventListener(\"message\", callback);\n        closeEndPoint(ep);\n      }\n    });\n  });\n  if (ep.start) {\n    ep.start();\n  }\n}\nfunction isMessagePort(endpoint) {\n  return endpoint.constructor.name === \"MessagePort\";\n}\nfunction closeEndPoint(endpoint) {\n  if (isMessagePort(endpoint))\n    endpoint.close();\n}\nfunction wrap(ep, target) {\n  return createProxy(ep, [], target);\n}\nfunction throwIfProxyReleased(isReleased) {\n  if (isReleased) {\n    throw new Error(\"Proxy has been released and is not useable\");\n  }\n}\nfunction createProxy(ep, path = [], target = function() {\n}) {\n  let isProxyReleased = false;\n  const proxy2 = new Proxy(target, {\n    get(_target, prop) {\n      throwIfProxyReleased(isProxyReleased);\n      if (prop === releaseProxy) {\n        return () => {\n          return requestResponseMessage(ep, {\n            type: 5,\n            path: path.map((p) => p.toString())\n          }).then(() => {\n            closeEndPoint(ep);\n            isProxyReleased = true;\n          });\n        };\n      }\n      if (prop === \"then\") {\n        if (path.length === 0) {\n          return { then: () => proxy2 };\n        }\n        const r = requestResponseMessage(ep, {\n          type: 0,\n          path: path.map((p) => p.toString())\n        }).then(fromWireValue);\n        return r.then.bind(r);\n      }\n      return createProxy(ep, [...path, prop]);\n    },\n    set(_target, prop, rawValue) {\n      throwIfProxyReleased(isProxyReleased);\n      const [value, transferables] = toWireValue(rawValue);\n      return requestResponseMessage(ep, {\n        type: 1,\n        path: [...path, prop].map((p) => p.toString()),\n        value\n      }, transferables).then(fromWireValue);\n    },\n    apply(_target, _thisArg, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const last = path[path.length - 1];\n      if (last === createEndpoint) {\n        return requestResponseMessage(ep, {\n          type: 4\n        }).then(fromWireValue);\n      }\n      if (last === \"bind\") {\n        return createProxy(ep, path.slice(0, -1));\n      }\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(ep, {\n        type: 2,\n        path: path.map((p) => p.toString()),\n        argumentList\n      }, transferables).then(fromWireValue);\n    },\n    construct(_target, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(ep, {\n        type: 3,\n        path: path.map((p) => p.toString()),\n        argumentList\n      }, transferables).then(fromWireValue);\n    }\n  });\n  return proxy2;\n}\nfunction myFlat(arr) {\n  return Array.prototype.concat.apply([], arr);\n}\nfunction processArguments(argumentList) {\n  const processed = argumentList.map(toWireValue);\n  return [processed.map((v) => v[0]), myFlat(processed.map((v) => v[1]))];\n}\nvar transferCache = /* @__PURE__ */ new WeakMap();\nfunction transfer(obj, transfers) {\n  transferCache.set(obj, transfers);\n  return obj;\n}\nfunction proxy(obj, options) {\n  return Object.assign(obj, { [proxyMarker]: options !== null && options !== void 0 ? options : true });\n}\nfunction toWireValue(value) {\n  for (const [name, handler] of transferHandlers) {\n    if (handler.canHandle(value)) {\n      const [serializedValue, transferables] = handler.serialize(value);\n      return [\n        {\n          type: 3,\n          name,\n          value: serializedValue\n        },\n        transferables\n      ];\n    }\n  }\n  return [\n    {\n      type: 0,\n      value\n    },\n    transferCache.get(value) || []\n  ];\n}\nfunction fromWireValue(value) {\n  switch (value.type) {\n    case 3:\n      return transferHandlers.get(value.name).deserialize(value.value);\n    case 0:\n      return value.value;\n  }\n}\nfunction requestResponseMessage(ep, msg, transfers) {\n  return new Promise((resolve) => {\n    const id = generateUUID();\n    ep.addEventListener(\"message\", function l(ev) {\n      if (!ev.data || !ev.data.id || ev.data.id !== id) {\n        return;\n      }\n      ep.removeEventListener(\"message\", l);\n      resolve(ev.data);\n    });\n    if (ep.start) {\n      ep.start();\n    }\n    ep.postMessage(Object.assign({ id }, msg), transfers);\n  });\n}\nfunction generateUUID() {\n  return new Array(4).fill(0).map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16)).join(\"-\");\n}\n\n// src/util.ts\nfunction formatFileSystemTree(tree) {\n  const newTree = { d: {} };\n  for (const name of Object.keys(tree)) {\n    const entry = tree[name];\n    if (\"file\" in entry) {\n      const contents = entry.file.contents;\n      const stringContents = typeof contents === \"string\" ? contents : binaryString(contents);\n      const binary = typeof contents === \"string\" ? {} : { b: true };\n      newTree.d[name] = { f: { c: stringContents, ...binary } };\n      continue;\n    }\n    const newEntry = formatFileSystemTree(entry.directory);\n    newTree.d[name] = newEntry;\n  }\n  return newTree;\n}\nfunction binaryString(bytes) {\n  let result = \"\";\n  for (const byte of bytes) {\n    result += String.fromCharCode(byte);\n  }\n  return result;\n}\n\n// src/index.ts\nvar DEFAULT_IFRAME_SOURCE = \"https://stackblitz.com/headless\";\nvar bootPromise = null;\nvar booted = false;\nvar destroyed = false;\nvar decoder = new TextDecoder();\nvar encoder = new TextEncoder();\nvar WebContainer = class {\n  constructor(_endpoint, fs, _iframe) {\n    this._endpoint = _endpoint;\n    this._iframe = _iframe;\n    this.fs = new FileSystemAPIClient(fs);\n  }\n  fs;\n  async spawn(command, optionsOrArgs, options) {\n    let args = [];\n    if (Array.isArray(optionsOrArgs)) {\n      args = optionsOrArgs;\n    } else {\n      options = optionsOrArgs;\n    }\n    let stream = new ReadableStream();\n    let output = void 0;\n    if (options?.output !== false) {\n      stream = new ReadableStream({\n        start(controller) {\n          output = (item) => controller.enqueue(item);\n        }\n      });\n    }\n    const wrapped = proxyListener(optionalBinaryListener(output));\n    const process = await this._endpoint.run({\n      command,\n      args,\n      env: options?.env,\n      terminal: options?.terminal\n    }, void 0, void 0, wrapped);\n    return new WebContainerProcessImpl(process, stream);\n  }\n  on(event, listener) {\n    let tornDown = false;\n    let unsubscribe = () => {\n    };\n    const wrapped = (...args) => {\n      if (tornDown) {\n        return;\n      }\n      listener(...args);\n    };\n    this._endpoint.on(event, proxy(wrapped)).then((_unsubscribe) => {\n      unsubscribe = _unsubscribe;\n      if (tornDown) {\n        unsubscribe();\n      }\n    });\n    return () => {\n      tornDown = true;\n      unsubscribe();\n    };\n  }\n  mount(tree, options) {\n    const payload = encoder.encode(JSON.stringify(formatFileSystemTree(tree)));\n    return this._endpoint.loadFiles(transfer(payload, [payload.buffer]), {\n      mountPoints: options?.mountPoint\n    });\n  }\n  teardown() {\n    if (destroyed) {\n      throw new Error(\"WebContainer already torn down\");\n    }\n    destroyed = true;\n    this.fs._teardown();\n    this._endpoint.teardown();\n    this._endpoint[releaseProxy]();\n    this._iframe.remove();\n  }\n  static async boot() {\n    while (bootPromise) {\n      await bootPromise;\n    }\n    if (booted) {\n      throw new Error(\"WebContainer already booted\");\n    }\n    const instancePromise = unsynchronizedBoot();\n    bootPromise = instancePromise.catch(() => {\n    });\n    try {\n      const instance = await instancePromise;\n      booted = true;\n      return instance;\n    } finally {\n      bootPromise = null;\n    }\n  }\n};\nvar DIR_ENTRY_TYPE_FILE = 1;\nvar DIR_ENTRY_TYPE_DIR = 2;\nvar DirEntImpl = class {\n  constructor(name, _type) {\n    this.name = name;\n    this._type = _type;\n  }\n  isFile() {\n    return this._type === DIR_ENTRY_TYPE_FILE;\n  }\n  isDirectory() {\n    return this._type === DIR_ENTRY_TYPE_DIR;\n  }\n};\nvar WebContainerProcessImpl = class {\n  constructor(_process, output) {\n    this._process = _process;\n    this.output = output;\n    this.input = new WritableStream({\n      write: (data) => {\n        this._process.write(data).catch(() => {\n        });\n      }\n    });\n  }\n  input;\n  get exit() {\n    return this._process.onExit;\n  }\n  kill() {\n    this._process.kill();\n  }\n  resize(dimensions) {\n    this._process.resize(dimensions);\n  }\n};\nvar FileSystemAPIClient = class {\n  _fs;\n  constructor(fs) {\n    this._fs = fs;\n  }\n  rm(...args) {\n    return this._fs.rm(...args);\n  }\n  async readFile(path, encoding) {\n    return await this._fs.readFile(path, encoding);\n  }\n  async writeFile(path, data, options) {\n    if (data instanceof Uint8Array) {\n      const buffer = data.buffer.slice(data.byteOffset, data.byteOffset + data.byteLength);\n      data = transfer(new Uint8Array(buffer), [buffer]);\n    }\n    await this._fs.writeFile(path, data, options);\n  }\n  async readdir(path, options) {\n    const result = await this._fs.readdir(path, options);\n    if (isStringArray(result)) {\n      return result;\n    }\n    if (isTypedArrayCollection(result)) {\n      return result;\n    }\n    const entries = result.map((entry) => new DirEntImpl(entry.name, entry[\"Symbol(type)\"]));\n    return entries;\n  }\n  async mkdir(path, options) {\n    return await this._fs.mkdir(path, options);\n  }\n  _teardown() {\n    this._fs[releaseProxy]();\n  }\n};\nasync function unsynchronizedBoot() {\n  const { iframe, endpointPromise } = endpointFactory();\n  const constructorEndpoint = await endpointPromise;\n  const endpoint = await constructorEndpoint.build({\n    host: window.location.host,\n    version: \"1.0.2\"\n  });\n  const fs = await endpoint.fs();\n  constructorEndpoint[releaseProxy]();\n  return new WebContainer(endpoint, fs, iframe);\n}\nfunction optionalBinaryListener(listener) {\n  if (listener == null) {\n    return void 0;\n  }\n  return (data) => {\n    if (data instanceof Uint8Array) {\n      listener(decoder.decode(data));\n    }\n  };\n}\nfunction proxyListener(listener) {\n  if (listener == null) {\n    return void 0;\n  }\n  return proxy(listener);\n}\nfunction endpointFactory() {\n  const iframe = document.createElement(\"iframe\");\n  iframe.style.display = \"none\";\n  iframe.setAttribute(\"allow\", \"cross-origin-isolated\");\n  const url = getIframeUrl();\n  iframe.src = getIframeUrl().toString();\n  const { origin } = url;\n  const promise = new Promise((resolve) => {\n    const onMessage = (event) => {\n      if (event.origin !== origin) {\n        return;\n      }\n      const { data } = event;\n      if (data.type === \"init\") {\n        resolve(wrap(event.ports[0]));\n        return;\n      }\n      if (data.type === \"warning\") {\n        console[data.level].call(console, data.message);\n        return;\n      }\n    };\n    window.addEventListener(\"message\", onMessage);\n  });\n  document.body.insertBefore(iframe, null);\n  return { iframe, endpointPromise: promise };\n}\nfunction isStringArray(list) {\n  return typeof list[0] === \"string\";\n}\nfunction isTypedArrayCollection(list) {\n  return list[0] instanceof Uint8Array;\n}\nfunction getIframeUrl() {\n  return new URL(window.WEBCONTAINER_API_IFRAME_URL ?? DEFAULT_IFRAME_SOURCE);\n}\nexport {\n  WebContainer\n};\n"],
  "mappings": "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",
  "names": []
}
